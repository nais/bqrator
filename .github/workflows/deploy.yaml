name: Build and deploy
on:
  push:
    branches:
      - main
    paths-ignore:
      - "*.md"
      - "*.env"
env:
  NAME: bqrator
  FEATURE_REPOSITORY: oci://europe-north1-docker.pkg.dev/nais-io/nais/feature
  CHART_PATH: "charts"

jobs:
  build_and_push:
    outputs:
      version: ${{ steps.build_chart.outputs.version }}
      name: ${{ steps.build_chart.outputs.name }}
    permissions:
      contents: "read"
      id-token: "write"
    name: build and push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        if: go_version
        with:
          go-version-file: go.mod

      - run: make test
      - run: make check
      - run: make helm-lint

      - run: git diff --exit-code --name-only

      - uses: nais/platform-build-push-sign@main
        id: build-push-sign
        with:
          name: ${{ env.NAME }}
          google_service_account: gh-${{ env.NAME }}
          workload_identity_provider: ${{ secrets.NAIS_IO_WORKLOAD_IDENTITY_PROVIDER }}
          push: true

      - uses: azure/setup-helm@v4
        name: "Setup Helm"
        with:
          version: "v3.14.2"

      - name: Build Chart
        id: build_chart
        run: |-
          suffix="$(date +%Y%m%d%H%M%S)"
          orig_version=$(yq '.version' < "${{ env.CHART_PATH}}/Chart.yaml")
          new_version="${orig_version}-$suffix"

          sed -i "s/^version: .*/version: $new_version/g" "${{ env.CHART_PATH}}/Chart.yaml"
          yq e -i '.image.tag = "${{ steps.build-push-sign.outputs.version }}"' "${{ env.CHART_PATH}}/values.yaml"

          helm dependency update "${{ env.CHART_PATH}}"
          helm package "${{ env.CHART_PATH}}" --destination .

          name=$(yq '.name' "${{ env.CHART_PATH}}/Chart.yaml")
          echo "name=$name" >> $GITHUB_OUTPUT
          echo "chart=$name-$new_version.tgz" >> $GITHUB_OUTPUT
          echo "version=$new_version" >> $GITHUB_OUTPUT

      - name: Push Chart
        run: |-
          chart="${{ steps.build_chart.outputs.chart }}"
          echo "Pushing: $chart"
          helm push "$chart" ${{ env.FEATURE_REPOSITORY }}

  rollout:
    needs:
      - build_and_push
    runs-on: fasit-deploy
    permissions:
      id-token: write
    steps:
      - uses: nais/fasit-deploy@v2
        with:
          chart: ${{ env.FEATURE_REPOSITORY }}/${{ needs.build_and_push.outputs.name }}
          version: ${{ needs.build_and_push.outputs.version }}
